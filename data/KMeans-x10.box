V vs=1 [ "/*
 *  This file is part of the X10 project (http://x10-lang.org).
 *
 *  This file is licensed to You under the Eclipse Public License (EPL);
 *  You may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *      http://www.opensource.org/licenses/eclipse-1.0.php
 *
 *  (C) Copyright IBM Corporation 2006-2010.
 */"

H hs=0[ H[ "package" "x10.benchmarks"] ";" ]

V vs=0 [
  H hs=0 [ H[ "import" "x10.io.Console" ] ";" ]
  H hs=0 [ H[ "import" "x10.util.Random" ] ";" ]
]

V vs=0 [
"/**
 * A KMeans object o can compute K means of a given set of 
 * points of dimension o.myDim.
 * <p> 
 * This class implements a sequential program, that is readily parallelizable.
 *  Converted to 2.1 on 9/1/2010
 */"
V vs=0 [
HV[ H["public" "class"] H hs=0 ["KMeans" "(" HV[ H["myDim" ":" "Int"] ] ")"] "{" ]
I is=4 [ V vs=1[
    H hs=0[ H[ "static" SL sep="," cs=0[ H["DIM" "=" "2" ] H[ "K" "=" "4" ] H[ "POINTS" "=" "2000" ] H[ "ITERATIONS" "=" "50" ] ] ] ";" ]
    H hs=0[ H[ "static" SL sep="," [ H["EPS" "=" "0.01F" ] ] ] ";" ]
    
    H hs=0[ H[ "static" "type" HV[ H[ H hs=0 [ "ValVector" "(" H ["k" ":" "Int"] ")" ] "=" H hs = 0 [ "Array" "[" "Float" "]" H[ "{" SL sep="," cs=0 [ H[ "self.rank" "==" "1" ] H[ "self.size" "==" "k" ] "self.rect" "self.zeroBased"] "}" ] ] ] ] ] ";" ]
    H hs=0[ H[ "static" "type" HV[ H[ "ValVector" "=" H hs=0 ["ValVector" "(" "DIM" ")"] ] ] ] ";" ]
    
    H hs=0[ H[ "static" "type" HV[ H[ H hs=0 [ "Vector" "(" "k" ":" "Int" ")" ] "=" H[ H hs=0 [ "Array" "[" "Float" "]" ] H[ "{" SL sep="," cs=0 [ H[ "self.rank" "==" "1"] H[ "self.size" "==" "k" ] H[ "self.rect" ]  H[ "self.zeroBased" ]] "}" ] ] ] ] ] ";" ]
    H hs=0[ H[ "static" "type" H hs=1 [ "Vector" "=" H hs=0 [ "Vector" "(" "DIM" ")" ] ] ] ";" ]
    
    H hs=0[ H[ "static" "type" H[ H hs=0 [ "SumVector" "(" "d" ":" "Int" ")" ] "=" H hs=0 [ "Vector" H[ "{" "self.dim" "==" "d" "}" ] ] ] ] ";" ]
    H hs=0[ H[ "static" "type" H[ "SumVector" "=" H hs=0 [ "SumVector" "(" "DIM" ")" ] ] ]  ";" ]

    V vs=0 [
    "/**
 * V represents the sum of 'count' number of vectors of dimension 'dim'.
 */"
    V[ H[ H[ "static" "class" H hs=0 [ "V" "(" "dim" ":" "Int" ")" ] "implements" H[ H hs=0 [ "(" "Int" ")" ] "=>" "Float" ] ] "{" ]
        I is=4 [ V[
        H hs=0[ H[ "var" H[ "vec" ":" H hs=0 [ "Vector" "(" "dim" ")" ] ]] ";" ]
        H hs=0[ H[ "var" H[ "count" ":" "Int" ]] ";" ]
        V[ H[ "def" H hs=0 [ "this" "(" SL sep="," cs=0 [ H[ "dim" ":" "Int" ] H[ "init" ":" H[ H hs=0["(" "int" ")"] "=>" "Float"]]] ")" ] ":" H hs=0 [ "SumVector" "(" "dim" ")" ] "{" ]
           I is=4 [ V[
               H hs=0[ H hs=0 [ "property" "(" "dim" ")" ] ";" ]
               H hs=0[ H [ "vec" "=" "new" H hs=0["Array" "[" "Float" "]" "(" H[ "this.dim" "," "init"] ")"] ] ";" ]
               H hs=0[ H[ "count" "=" "0" ] ";" ]
           ] ]
        "}" ]
        H[ "public" "def" H hs=0 [ "apply" "(" "i" ":" "Int" ")" ] "=" H hs=0[ H hs=0 [ "vec" "(" "i" ")" ] ";"] ]
        V[ H[ "def" H hs=0 [ "makeZero" "(" ")" ] "{" ]
            I is=4 [ V[
            H hs=0 [ "for" "(" H[ H hs=0 [ "[" "i" "]" ] "in" H hs=0 [ "0" ".." "dim" "-" "1" ] ] ")" ]
                I is=2 [
                H hs=0[ H[ H hs=0 [ "vec" "(" "i" ")" ] "=" "0.0F" ] ";" ]
                ]
            H hs=0 [ H [ "count" "=" "0"] ";"]
            ] ]
        "}" ]
        V[ H[ "def" H hs=0 [ "dist" "(" "a" ":" "ValVector" "(" "dim" ")" ")" ] ":" "Float" "{" ]
            I is=4 [ V[
                H hs=0[ H[ "var" "dist" ":" "Float" "=" "0.0F" ] ";" ]
                H[ H hs=0 [ "for" "(" H[ H hs=0 [ "[" "i" "]" ] "in" H hs=0 [ "0" ".." "dim" "-" "1" ] ] ")" ] "{" ]
                I is=4 [ V[
                    H hs=0[ H[ "val" "tmp" "=" H hs=0 [ "vec" "(" "i" ")" ] "-" H hs=0 [ "a" "(" "i" ")" ] ] ";" ]
                    H hs=0[ H[ "dist" "+=" H hs=0 [ "tmp" "*" "tmp" ] ] ";" ]
                ] ]
                "}"
                H hs=0[ H[ "return" "dist"] ";"]
            ] ]
        "}" ]
        V[ H[ "def" H hs=0 [ "print" "(" ")" ] "{" ]
            I is=4 [ V[
                H hs=0 [ H hs=0 [ "Console.OUT.println" "(" ")" ] ";" ]
                H[ H hs=0 [ "for" "(" H[ H hs=0 [ "[" "i" "]" ] "in" H hs=0 [ "0" ".." "dim" "-" "1" ] ] ")" ] "{" ]
                    I is=4 [ V[
                        H hs=0 [ "Console.OUT.print" "(" H[ H hs=0[ "(" H[ H hs=0[ "i" ">" "0" ] "?" "x" ":" "y" ] ")"] "+" H hs=0[ "vec" "(" "i" ")" ]] ")" ";" ]
                    ] ]
                "}" ] ]
        "}" ]
        H[ "def" H[ H hs=0 [ "normalize" H hs=0 [ "(" ")" ] ] "{" H hs=0 [ "div" "(" "count" ")" ";" ] "}" ] ]
        H[ "def" H[ H hs=0 [ "count" "(" ")" ] "=" H hs=0[ "count" ";"]] ]
        ] ]
    "}" ] ]

    V[ H[ "def" H hs=0 [ "this" "(" "myDim" ":" "Int" ")" ] ":" H hs=0 [ "KMeans" "{" H[ "self.myDim" "==" "myDim" ] "}" ] "{" ]
        I is=4 [ V[
            H hs=0 [ "property" "(" "myDim" ")" ";" ]
        ] ]
    "}" ]

    V vs=0 [
    "/**
 * Compute myK means for the given set of points of dimension myDim.
 */"
    V[ H[ "def" H hs=0 [ "computeMeans" "(" HV[ H hs=0 [ SL sep="," cs=0[ H[ H hs=0 [ "myK" ":" ] "Int" ] H[ H hs=0 [ "points" ":" ] H hs=0 [ H hs=0 [ "Array" "[" "ValVector" "(" "myDim" ")" "]" ] "(" "1" ")" ] ] ] ] ]")" ] ":" H hs=0 [ "KMeansData" "(" SL sep="," cs=0[ "myK" "myDim"] ")" ] "{" ]
        I is=4 [ V[
            H hs=0[ H[ "var" V[ HV[ H[ "redCluster" ":" H hs=0[ "KMeansData" "(" SL sep="," cs=0[ "myK" "myDim"] ")"] "=" ]
              H[ "new" H hs=0 [ "Array" "[" "SumVector" "(" "myDim" ")" "]" "("
                SL sep="," cs=0[ "myK"
                   H[ H hs=0["(" "i" ":" "int" ")"] "=>" "new" H hs=0["V" "(" SL sep="," cs=0[ "myDim"
                     H[ H hs=0["(" "j" ":" "int" ")"] "=>" H hs=0[ H hs=0[ "points" "(" "i" ")"] "(" "j" ")"] ]] ")" ]]] ")" ]]]]] ";" ]
            H hs=0[ H[ "var" V[ HV[ H[ "blackCluster" ":" H hs=0 [ "KMeansData" "(" SL sep="," [ "myK" "myDim"] ")" ] "=" ]
                H[ "new" H hs=0 [ "Array" "[" "SumVector" "(" "myDim" ")" "]" "(" SL sep="," [ "myK" H[ H hs=0 [ "(" "i" ":" "int" ")" ] "=>" "new" H hs=0 [ "V" "(" SL sep="," [ "myDim" H[ H hs=0 [ "(" "j" ":" "int" ")" ] "=>" "0.0F" ] ] ")" ")"] ]]] ]]] ] ";" ]
        H[ H hs=0["for" "(" H[ H hs=0["[" "i" "]"] "in" H hs=0["1" ".." "ITERATIONS"]] ")"] "{"]
            I[ V[
	            H hs=0[ H[ "val" H hs=0 [ H[ "tmp" "=" "redCluster" ]]] ";" ]
	            H hs=0 [ H[ "redCluster" "=" "blackCluster" ] ";" ]
	            H hs=0 [ H[ "blackCluster" "=" "tmp" ] ";" ]
	            V[ H[ H hs=0 [ "for" "(" H[ H hs=0 [ "[" "p" "]" ] "in" H hs=0 [ "0" ".." "POINTS" "-" "1" ] ] ")" ] "{" ]
	                I is=4 [ V[
	                H hs=0 [ H[ "var" "closest" ":" "Int" "=" "-1" ] ";" ]
	                H hs=0 [ H[ "var" "closestDist" ":" "Float" "=" "Float.MAX_VALUE" ] ";" ]
	                H hs=0 [ H[ "val" "point" "=" H hs=0 [ "points" "(" "p" ")" ] ] ";" ]
	                H[ H hs=0 [ "for" "(" H[ H hs=0["[" "k" "]"] "in" H hs=0["0" ".." "myK" "-" "1"]] ")"] "{" "// compute closest mean in cluster."]
	                    I[ V[
	                    H hs=0[ H[ "val" "dist" "=" H hs=0[ H hs=0[ "blackCluster" "(" "k" ")"] "." H hs=0[ "dist" "(" "point" ")"]]] ";"]
	                    H[ "if" H hs=0[ "(" H ["dist" "<" "closestDist"] ")"] "{"]
	                        I[ V[
	                            H hs=0[ H[ "closestDist" "=" "dist"] ";"]
	                            H hs=0[ H[ "closest" "=" "k"] ";" ]
	                        ]]
	                    "}"
	                    ]]
	                "}"
	                H hs=0 [ "redCluster" "(" "closest" ")" "." "addIn" "(" "point" ")" ";"]
	                ] ]
	            "}" ]
	            H hs=0[ "for" "(" H[ H hs=0["[" "k" "]"] "in" H hs=0["0" ".." "myK" "-" "1"]] ")" ]
	                I is=2[
	                    H hs=0[ "redCluster" "(" "k" ")" "." "normalize" "(" ")" ";" ]
	                ]
            
	            H hs=0[ H[ "var" "b" ":" "Boolean" "=" "true"] ";"]
	            H[ H hs=0[ "for" "(" H[ H hs=0["[" "k" "]"] "in" H hs=0["0" ".." "myK" "-" "1"]] ")"] "{"]
	               I[ V[
	                   H[ "if" H hs=0["(" H[ H hs=0[ H hs=0["redCluster" "(" "k" ")"] "." "dist" "(" "blackCluster" "(" "k" ")" ")"] ">" "EPS"] ")"] "{" ]
	                       I[ V[
	                           H hs=0[ H[ "b" "=" "false"] ";"]
	                           H hs=0[ "break" ";"]
	                       ]]
	                   "}"
	               ]]
	                "}"
	            H[ "if" H hs=0["(" "b" ")"] ]
	                I is=2[
	                    H hs=0[ "break" ";"]
	                ]
	            H hs=0[ "for" "(" H[ H hs=0["[" "k" "]"] "in" H hs=0["0" ".." "myK" "-" "1"]] ")" ]
	                I is=2[
	                    H hs=0[ H[ H hs=0[ H hs=0["blackCluster" "(" "k" ")"] "." H hs=0["makeZero" "(" ")"]]] ";" ]
	                ]
	         ]]
        "}"
        H hs=0[ H[ "return" "redCluster"] ";"]
        ] ]
    "}"
    ] ]

    V[ H[ "public" "static" "def" H hs=0[ "main" "(" "Array" "[" "String" "]" ")"] "{" ]
        I is=4 [ V[
        H hs=0 [ H[ "val" "rnd" "=" "new" H hs=0[ "Random" "(" "0" ")"]] ";" ]
        H hs=0 [ H[ "val" "points" "=" "new" H hs=0[ "Array" "[" "ValVector" "]" "(" SL sep="," [ "POINTS"
                        H[ H[ H hs=0[ "(" "int" ")"] "=>"
                             H hs=0[ H[ H hs=0[ H[ "new" H hs=0[ "Array" "[" "Float" "]"]] "(" SL sep="," [ "DIM"
                                                                                  H[ H hs=0["(" "int" ")"] "=>"
                                                                                     H hs=0["rnd.nextFloat" "(" ")" ] ] ] ")" ]
                                           "as" "ValVector" ]]]]] ")" ]] ";" ]
        H hs=0[ H[ "val" "result" "=" "new" H hs=0[ "KMeans" "(" "DIM" ")" "." H hs=0[ "computeMeans" "(" SL sep="," ["K" "points"] ")"]]] ";" ]
        V[ H hs=0[ "for" "(" H[ H hs=0[ "[" "k" "]"] "in" H hs=0[ "0" ".." "K" "-" "1"]] ")"]
            I is=2[ V[
            H hs=0[ H hs=0[ "result" "(" "k" ")"] "." "print" "(" ")" ";"] ]
            ]]
        ] ]
    "}"
    ]
] ]
]
"}"
]
]
